{"version":3,"sources":["ui/Shop/Product.module.css","ui/Components/AppButton/AppButton.tsx","utils/imgs/pasta.png","utils/imgs/sushi.png","utils/imgs/bread.png","bll/state/product-reducer.ts","utils/imgs/meat.png","ui/Shop/ProductItem.tsx","ui/Shop/Product.tsx","ui/Components/AppInput/AppInput.tsx","ui/Shop/Baskets.tsx","AppRouter.tsx","ui/AppHeader.tsx","ui/App.tsx","bll/state/store.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","BtnColorType","initialState","product","id","img","pasta","title","price","description","count","sushi","bread","productInBasket","actions","type","totalPrice","act","productReducer","state","action","copyProduct","JSON","parse","stringify","addProd","filter","p","find","startPrice","filterBasket","console","log","baskets","AppButton","React","memo","onClick","disabled","color","white","className","ProductItem","addProductToBasket","useSelector","style","prod","src","alt","item","blue","Product","dispatch","useDispatch","products","useCallback","isInBasket","container","map","AppInput","value","onChange","border","placeholder","e","result","currentTarget","Basket","newPriceValue","reduce","acc","el","addDeleteProd","addAndDeleteProduct","toString","route","path","component","to","AppRouter","Fragment","index","exact","render","AppHeader","length","App","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","persistedTodosString","localStorage","getItem","store","createStore","subscribe","setItem","getState","window","ReactDOM","StrictMode","document","getElementById"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,UAAY,2BAA2B,KAAO,wB,+HCEpDC,E,sFCHG,MAA0B,kCCA1B,MAA0B,kCCA1B,MAA0B,kCCiBnCC,EAAe,CACjBC,QAAS,CACL,CACIC,GAAI,EAAGC,IAAKC,EAAOC,MAAO,QAASC,MAAO,EAC1CC,YAAa,wbAAsFC,MAAO,GAE9G,CACIN,GAAI,EAAGC,IAAKM,EAAOJ,MAAO,QAASC,MAAO,EAC1CC,YAAa,wbAAsFC,MAAO,GAE9G,CACIN,GAAI,EAAGC,IC5BJ,IAA0B,iCD4BXE,MAAO,OAAQC,MAAO,EACxCC,YAAa,wbAAsFC,MAAO,GAE9G,CACIN,GAAI,EAAGC,IAAKO,EAAOL,MAAO,QAASC,MAAO,EAC1CC,YAAa,wbAAsFC,MAAO,IAGlHG,gBAAiB,GACjBL,MAAO,GAGEM,EAEW,SAACV,GAAD,MAAiB,CAACW,KAAM,wBAAyBX,OAF5DU,EAGM,SAACE,GAAD,MAAyB,CAACD,KAAM,kBAAmBC,eAHzDF,EAIc,SAACV,EAAYa,GAAb,MAA+B,CAACF,KAAM,qBAAsBX,KAAIa,QAkC5EC,EA7BQ,WAA+D,IAA9DC,EAA6D,uDAArDjB,EAAckB,EAAuC,uCACjF,OAAQA,EAAOL,MACX,IAAK,cACD,OAAO,2BAAII,GAAX,IAAkBhB,QAASgB,EAAMhB,UACrC,IAAK,wBACD,IAAMkB,EAAiCC,KAAKC,MAAMD,KAAKE,UAAUL,EAAMhB,UACjEsB,EAAUJ,EAAYK,QAAO,SAAAC,GAAC,OAAIA,EAAEvB,KAAOgB,EAAOhB,MACxD,OAAO,2BAAIe,GAAX,IAAkBN,gBAAgB,GAAD,mBAAMM,EAAMN,iBAAZ,YAAgCY,MAErE,IAAK,kBACD,OAAO,2BAAIN,GAAX,IAAkBX,MAAOY,EAAOJ,aACpC,IAAK,qBACD,IAAMS,EAAUN,EAAMN,gBAAgBe,MAAK,SAAAD,GAAC,OAAIA,EAAEvB,KAAOgB,EAAOhB,MAC1DyB,EAAaV,EAAMhB,QAAQyB,MAAK,SAAAD,GAAC,OAAIA,EAAEvB,KAAOgB,EAAOhB,MACvDqB,GAAWI,IACI,SAAfT,EAAOH,IAAgBQ,EAAQf,QAAUe,EAAQf,QACjDe,EAAQjB,MAAQqB,EAAWrB,MAAQiB,EAAQf,OAE/C,IAAMoB,EAAeX,EAAMN,gBAAgBa,QAAO,SAAAC,GAAC,OAAGA,EAAEjB,MAAQ,KAChE,OAAO,2BAAIS,GAAX,IAAkBN,gBAAgB,YAAKiB,KAC3C,IAAK,mBAED,OADAC,QAAQC,IAAIV,KAAKE,UAAUJ,EAAOa,UAC3Bd,EAEX,QACI,OAAOA,I,gCJvEPlB,K,cAAAA,E,aAAAA,M,KAYL,IAAMiC,EAAYC,IAAMC,MAAK,YAAwE,IAAtE7B,EAAqE,EAArEA,MAAO8B,EAA8D,EAA9DA,QAASC,EAAqD,EAArDA,SAAqD,IAA3CC,aAA2C,MAAnCtC,EAAauC,MAAsB,EACvG,OAAO,wBAAQC,UAAS,cAASF,GAASF,QAASA,EAASC,SAAUA,EAA/D,SAA0E/B,OMHxEmC,EAAcP,IAAMC,MAAK,YAAqD,IAAD,EAAlDjC,EAAkD,EAAlDA,QAASwC,EAAyC,EAAzCA,mBACvC9B,EAAkB+B,aAAkD,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQU,mBACjG,OACI,sBAAK4B,UAAWI,IAAMC,KAAtB,UACI,qBAAKC,IAAK5C,EAAQE,IAAK2C,IAAK7C,EAAQI,QACpC,6BAAKJ,EAAQI,QACb,8BAAIJ,EAAQK,MAAM,0CAClB,oFAAc,UAAAK,EAAgBe,MAAK,SAAAqB,GAAI,OAAIA,EAAK7C,KAAOD,EAAQC,aAAjD,eAAsDM,QAAS,KAC7E,4BAAIP,EAAQM,cACZ,cAAC,EAAD,CAAWF,MAAO,yFAAoBgC,MAAOtC,EAAaiD,KAAMb,QAAS,WAAKM,EAAmBxC,EAAQC,aCbxG+C,EAAUhB,IAAMC,MAAK,WAC9B,IAAMgB,EAAWC,cACXC,EAAWV,aAAkD,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQA,WACpFU,EAAkB+B,aAAkD,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQU,mBAE3F8B,EAAqBY,uBAAY,SAACnD,GACpC,IAAMoD,EAAa3C,EAAgBe,MAAK,SAAAD,GAAC,OAAGA,EAAEvB,KAAOA,KAEjDgD,EADDI,EACU1C,EAA8B0C,EAAWpD,GAAI,QAE7CU,EAA2BV,MACzC,CAACS,IAEJ,OACI,qBAAK4B,UAAWI,IAAMY,UAAtB,SACKH,EAASI,KAAI,SAAA/B,GACV,OAAO,cAACe,EAAD,CACHvC,QAASwB,EAETgB,mBAAoBA,GADfhB,EAAEvB,YChBduD,G,YAAW,SAAC,GAAkE,IAAjEC,EAAgE,EAAhEA,MAAOC,EAAyD,EAAzDA,SAAUC,EAA+C,EAA/CA,OAAQ/C,EAAuC,EAAvCA,KAAMgD,EAAiC,EAAjCA,YAOrD,OACI,qBAAKtB,UAAW,aAAhB,SACI,uBACIA,UAAS,qBAAgBqB,EAAS,eAAiB,IACnDF,MAAOA,EACPC,SAVY,SAACG,GACrB,IAAMC,EAASD,EAAEE,cAAcN,MAC/BC,EAASI,IASDlD,KAAMA,EACNgD,YAAaA,QCfhBI,EAAShC,IAAMC,MAAK,WAC7B,IAAMgB,EAAWC,cACXlD,EAAUyC,aAAkD,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQA,WACnFK,EAAQoC,aAAsC,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQK,SACrEK,EAAkB+B,aAAkD,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQU,mBAc7FuD,EAAgBvD,EAAgB6C,KAAI,SAAA/B,GAAC,OAAIA,EAAEnB,SAAO6D,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,IAAI,GAEpF,OAVInB,EAAStC,EASFsD,IAEP,sBAAK3B,UAAW,kBAAhB,UACI,8BAEQ5B,EAAgB6C,KAAI,SAAA/B,GAChB,IAAM6C,EAAe,SAACvD,IAnBf,SAACb,EAAYa,GACpCmC,EAAStC,EAA8BV,EAAIa,IAmBvBwD,CAAoB9C,EAAEvB,GAAIa,IAE9B,OACI,sBAAgBwB,UAAW,YAA3B,UACI,sBAAKA,UAAW,OAAhB,UACI,qBAAKM,IAAKpB,EAAEtB,IAAK2C,IAAKrB,EAAEpB,QACxB,6BAAKoB,EAAEpB,QACP,8BAAIoB,EAAEnB,MAAM,wCAAZ,iBAAkCmB,EAAEjB,MAApC,iCACA,4BAAIiB,EAAElB,iBAEV,sBAAKgC,UAAW,YAAhB,UACI,cAAC,EAAD,CAAWJ,QAAS,WAAKmC,EAAc,UAAYjE,MAAO,MAC1D,+BAAOoB,EAAEjB,QACT,cAAC,EAAD,CAAW2B,QAAS,kBAAImC,EAAc,SAASjE,MAAO,WAVpDoB,EAAEvB,SAgB5B,sBAAKqC,UAAW,cAAhB,uDAEI,sBAAKA,UAAW,OAAhB,UACI,cAAC,EAAD,CAAUmB,MAAO,GAAIC,SAAU,aAAQE,YAAa,OAAQhD,KAAM,OAAQ+C,QAAM,IAChF,cAAC,EAAD,CAAUF,MAAO,GAAIC,SAAU,aAAQE,YAAa,UAAWhD,KAAM,OAAQ+C,QAAM,IACnF,cAAC,EAAD,CAAUF,MAAO,GAAIC,SAAU,aAAQE,YAAa,UAAWhD,KAAM,OAAQ+C,QAAM,IACnF,cAAC,EAAD,CAAUF,MAAO,GAAIC,SAAU,aAAQE,YAAa,QAAShD,KAAM,UAAW+C,QAAM,IACpF,cAAC,EAAD,CAAWzB,QApCZ,kBAAKN,QAAQC,IAAIV,KAAKE,UAAUrB,KAoCDI,MAAO,2DACrC,wCAAWC,EAAMkE,0BC1D/BC,EAAQ,CACV,CACIpE,MAAO,OACPqE,KAAM,IACNC,UAAW,cAAC,IAAD,CAAUC,GAAI,cAE7B,CACIvE,MAAO,UACPqE,KAAM,WACNC,UAAW,cAAC1B,EAAD,KAEf,CACI5C,MAAO,SACPqE,KAAM,UACNC,UAAW,cAAC,EAAD,MAINE,EAAY,WACrB,OACI,cAAC,IAAMC,SAAP,UACKL,EAAMjB,KAAI,SAACT,EAAMgC,GACd,OAAO,cAAC,IAAD,CAAOL,KAAM3B,EAAK2B,KAAMM,OAAK,EAACC,OAAQ,kBAAMlC,EAAK4B,YAAjD,kBAA4EI,U,OCrBtFG,EAAY,WACrB,IAAMvE,EAAkB+B,aAAkD,SAAAzB,GAAK,OAAIA,EAAMhB,QAAQU,mBACjG,OACI,sBAAK4B,UAAU,aAAf,UACI,cAAC,IAAD,CAASqC,GAAI,WAAb,8DACA,eAAC,IAAD,CAASA,GAAI,UAAb,yDAAkCjE,EAAgBwE,OAAOX,WAAzD,WCGGY,ICLXC,EDKWD,EATf,WACI,OACI,sBAAK7C,UAAU,MAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,QEKG+C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QDJRQ,EAAcC,YAAgB,CAChC/F,QAASe,IAIPiF,EAAuBC,aAAaC,QAAQ,SAC/CF,IACCZ,EAAiBjE,KAAKC,MAAM4E,IAIzB,IAAMG,EAAQC,YAAYN,EAAaV,GAE9Ce,EAAME,WAAU,WACZJ,aAAaK,QAAQ,QAASnF,KAAKE,UAAU8E,EAAMI,aACnDN,aAAaK,QAAQ,kBAAmBnF,KAAKE,UAAU8E,EAAMI,WAAWvG,QAAQU,qBAQpF8F,OAAOL,MAAQA,EEnBfM,IAASzB,OACL,cAAC,IAAM0B,WAAP,UACI,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACI,cAAC,IAAD,UACI,cAAC,EAAD,UAIZQ,SAASC,eAAe,SAM5BvB,M","file":"static/js/main.019bf728.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Product_container__3-I6s\",\"prod\":\"Product_prod__2BPY6\"};","import React, { MouseEvent} from 'react';\nimport './AppButton.scss'\n\nexport enum BtnColorType {\n    white ='white',\n    blue ='blue',\n}\n\ninterface IAppButton{\n    title: string\n    onClick:()=> void\n    disabled?: boolean\n    color?:BtnColorType\n}\n\nexport const AppButton = React.memo(({title, onClick, disabled, color = BtnColorType.white}:IAppButton) => {\n    return <button className={`btn ${color}`} onClick={onClick} disabled={disabled}>{title}</button>\n})","export default __webpack_public_path__ + \"static/media/pasta.0d9e8006.png\";","export default __webpack_public_path__ + \"static/media/sushi.503f2121.png\";","export default __webpack_public_path__ + \"static/media/bread.792066b0.png\";","import pasta from '../../utils/imgs/pasta.png'\r\nimport sushi from '../../utils/imgs/sushi.png'\r\nimport bread from '../../utils/imgs/bread.png'\r\nimport meat from '../../utils/imgs/meat.png'\r\n\r\n\r\nimport {InferActionsTypes} from \"./store\";\r\n\r\nexport type ProductType = {\r\n    id: number\r\n    img: string\r\n    title: string\r\n    price: number\r\n    description: string\r\n    count: number\r\n}\r\nexport type ActType = 'plus' | 'minus'\r\nconst initialState = {\r\n    product: [\r\n        {\r\n            id: 1, img: pasta, title: \"Pasta\", price: 3,\r\n            description: \"Пакеты для ручной и автоматической фасовки сыпучих продуктов из комбинаций плёнок:\", count: 1\r\n        },\r\n        {\r\n            id: 2, img: sushi, title: \"Sushi\", price: 8,\r\n            description: \"Пакеты для ручной и автоматической фасовки сыпучих продуктов из комбинаций плёнок:\", count: 1\r\n        },\r\n        {\r\n            id: 3, img: meat, title: \"Meat\", price: 9,\r\n            description: \"Пакеты для ручной и автоматической фасовки сыпучих продуктов из комбинаций плёнок:\", count: 1\r\n        },\r\n        {\r\n            id: 4, img: bread, title: \"Bread\", price: 2,\r\n            description: \"Пакеты для ручной и автоматической фасовки сыпучих продуктов из комбинаций плёнок:\", count: 1\r\n        },\r\n    ] as Array<ProductType>,\r\n    productInBasket: [] as Array<ProductType>,\r\n    price: 0\r\n}\r\n\r\nexport const actions = {\r\n    setProduct: () => ({type: \"SET_PRODUCT\"} as const),\r\n    addProductToBasket: (id: number) => ({type: \"ADD_PRODUCT_TO_BASKET\", id} as const),\r\n    setTotalPrice: (totalPrice: number) => ({type: \"SET_TOTAL_PRICE\", totalPrice} as const),\r\n    addAndDeleteProductAC: (id: number, act: ActType) => ({type: \"ADD_DELETE_PRODUCT\", id, act} as const),\r\n    checkoutBasket: (baskets: ProductType[]) => ({type: \"CHECKOUT_BASKETS\", baskets} as const),\r\n}\r\n\r\n\r\nconst productReducer = (state = initialState, action: ActionsTypes): InitialState => {\r\n    switch (action.type) {\r\n        case \"SET_PRODUCT\":\r\n            return {...state, product: state.product}\r\n        case 'ADD_PRODUCT_TO_BASKET': {\r\n            const copyProduct:Array<ProductType> = JSON.parse(JSON.stringify(state.product))\r\n            const addProd = copyProduct.filter(p => p.id === action.id)\r\n            return {...state, productInBasket: [...state.productInBasket, ...addProd]}\r\n        }\r\n        case \"SET_TOTAL_PRICE\":\r\n            return {...state, price: action.totalPrice}\r\n        case \"ADD_DELETE_PRODUCT\":\r\n            const addProd = state.productInBasket.find(p => p.id === action.id)\r\n            const startPrice = state.product.find(p => p.id === action.id)\r\n            if (addProd && startPrice) {\r\n                action.act === 'plus'? addProd.count++ : addProd.count--;\r\n                addProd.price = startPrice.price * addProd.count\r\n            }\r\n            const filterBasket = state.productInBasket.filter(p=> p.count > 0)\r\n            return {...state, productInBasket: [...filterBasket]}\r\n        case \"CHECKOUT_BASKETS\":{\r\n            console.log(JSON.stringify(action.baskets))\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default productReducer\r\n\r\nexport type InitialState = typeof initialState\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n","export default __webpack_public_path__ + \"static/media/meat.82c4b571.png\";","import React from 'react';\r\nimport '../App.scss';\r\nimport style from './Product.module.css'\r\nimport {actions, ProductType} from \"../../bll/state/product-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/state/store\";\r\nimport {AppButton, BtnColorType} from \"../Components/AppButton/AppButton\";\r\n\r\ninterface ProductItemProps{\r\n    product: ProductType\r\n    addProductToBasket: (id: number)=> void\r\n}\r\n\r\nexport const ProductItem = React.memo(({product, addProductToBasket}:ProductItemProps) => {\r\n    const productInBasket = useSelector<AppRootStateType, Array<ProductType>>(state => state.product.productInBasket)\r\n    return (\r\n        <div className={style.prod}>\r\n            <img src={product.img} alt={product.title}/>\r\n            <h3>{product.title}</h3>\r\n            <p>{product.price}<span>byn</span></p>\r\n            <p>Отложено: {productInBasket.find(item => item.id === product.id)?.count || 0}</p>\r\n            <p>{product.description}</p>\r\n            <AppButton title={'Купить\\\\Добавить'} color={BtnColorType.blue} onClick={()=>{addProductToBasket(product.id)}} />\r\n        </div>\r\n    )\r\n})","import React, {useCallback} from 'react';\r\nimport '../App.scss';\r\nimport style from './Product.module.css'\r\nimport {actions, ProductType} from \"../../bll/state/product-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/state/store\";\r\nimport {ProductItem} from \"./ProductItem\";\r\n\r\n\r\nexport const Product = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const products = useSelector<AppRootStateType, Array<ProductType>>(state => state.product.product)\r\n    const productInBasket = useSelector<AppRootStateType, Array<ProductType>>(state => state.product.productInBasket)\r\n\r\n    const addProductToBasket = useCallback((id: number) => {\r\n        const isInBasket = productInBasket.find(p=> p.id === id)\r\n        if(isInBasket){\r\n            dispatch(actions.addAndDeleteProductAC(isInBasket.id, 'plus'))\r\n        }else\r\n            dispatch(actions.addProductToBasket(id))\r\n    }, [productInBasket])\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            {products.map(p => {\r\n                return <ProductItem\r\n                    product={p}\r\n                    key={p.id}\r\n                    addProductToBasket={addProductToBasket} />\r\n            })}\r\n        </div>\r\n    );\r\n})","import React, {ChangeEvent} from 'react';\nimport './AppInput.scss'\n\ninterface IAppInputProps {\n    value: string\n    onChange: (value: string) => void\n    border?: boolean\n    placeholder?: string\n    type?: string\n}\n\nexport const AppInput = ({value, onChange, border, type, placeholder}: IAppInputProps) => {\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        const result = e.currentTarget.value\n        onChange(result)\n    }\n\n    return (\n        <div className={'input-wrap'}>\n            <input\n                className={`input-base ${border ? 'input-border' : ''}`}\n                value={value}\n                onChange={onChangeHandler}\n                type={type}\n                placeholder={placeholder}\n            />\n        </div>\n    )\n}","import React from 'react';\r\nimport '../App.scss';\r\nimport './Basket.scss';\r\nimport {actions, ActType, ProductType} from \"../../bll/state/product-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../bll/state/store\";\r\n\r\nimport {AppButton} from \"../Components/AppButton/AppButton\";\r\nimport {AppInput} from \"../Components/AppInput/AppInput\";\r\n\r\nexport const Basket = React.memo(() => {\r\n    const dispatch = useDispatch()\r\n    const product = useSelector<AppRootStateType, Array<ProductType>>(state => state.product.product)\r\n    const price = useSelector<AppRootStateType, number>(state => state.product.price)\r\n    const productInBasket = useSelector<AppRootStateType, Array<ProductType>>(state => state.product.productInBasket)\r\n\r\n    const addAndDeleteProduct =(id: number, act: ActType)=>{\r\n        dispatch(actions.addAndDeleteProductAC(id, act))\r\n    }\r\n    const totalPrice = (newPrice: number) => {\r\n        dispatch(actions.setTotalPrice(newPrice))\r\n    }\r\n    const checkoutBasket =()=>{\r\n        actions.checkoutBasket(productInBasket)\r\n    }\r\n\r\n    const checkout=()=> console.log(JSON.stringify(product))\r\n\r\n    let newPriceValue = productInBasket.map(p => p.price).reduce((acc, el) => acc + el, 0)\r\n    totalPrice(newPriceValue)\r\n    return (\r\n        <div className={'basketContainer'}>\r\n            <div>\r\n                {\r\n                    productInBasket.map(p => {\r\n                        const addDeleteProd =(act: ActType)=>{\r\n                            addAndDeleteProduct(p.id, act)\r\n                        }\r\n                        return (\r\n                            <div key={p.id} className={'prodCount'}>\r\n                                <div className={'prod'}>\r\n                                    <img src={p.img} alt={p.title}/>\r\n                                    <h3>{p.title}</h3>\r\n                                    <p>{p.price}<span>byn </span> за {p.count} шт\\уп</p>\r\n                                    <p>{p.description}</p>\r\n                                </div>\r\n                                <div className={'countCont'}>\r\n                                    <AppButton onClick={()=>{addDeleteProd('minus')}}  title={'-'}/>\r\n                                    <span>{p.count}</span>\r\n                                    <AppButton onClick={()=>addDeleteProd('plus')} title={'+'}/>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n            <div className={'basket-form'}>\r\n                Корзина\r\n                <div className={'form'}>\r\n                    <AppInput value={''} onChange={()=>{}} placeholder={'Name'} type={'text'} border/>\r\n                    <AppInput value={''} onChange={()=>{}} placeholder={'Surname'} type={'text'} border/>\r\n                    <AppInput value={''} onChange={()=>{}} placeholder={'Address'} type={'text'} border/>\r\n                    <AppInput value={''} onChange={()=>{}} placeholder={'Phone'} type={'numbers'} border/>\r\n                    <AppButton onClick={checkout} title={'Отправить'}/>\r\n                    <p>Total: {price.toString()}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n})\r\n","import React from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport {Product} from \"./ui/Shop/Product\";\nimport {Basket} from \"./ui/Shop/Baskets\";\n\nconst route = [\n    {\n        title: 'Main',\n        path: '/',\n        component: <Redirect to={'/product'}/>\n    },\n    {\n        title: 'Product',\n        path: '/product',\n        component: <Product/>\n    },\n    {\n        title: 'Basket',\n        path: '/basket',\n        component: <Basket/>\n    },\n]\n\nexport const AppRouter = () => {\n    return (\n        <React.Fragment>\n            {route.map((item, index) => {\n                return <Route path={item.path} exact render={() => item.component} key={`route - ${index}`}/>\n            })}\n        </React.Fragment>\n    );\n}","import React from 'react';\nimport {NavLink} from \"react-router-dom\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"../bll/state/store\";\nimport {ProductType} from \"../bll/state/product-reducer\";\n\nexport const AppHeader = () => {\n    const productInBasket = useSelector<AppRootStateType, Array<ProductType>>(state => state.product.productInBasket)\n    return (\n        <div className=\"AppNavLink\">\n            <NavLink to={'/product'}>Продукты</NavLink>\n            <NavLink to={'/basket'}>Корзина ({productInBasket.length.toString()})</NavLink>\n        </div>\n    );\n};","import React from 'react';\r\nimport './App.scss';\r\nimport {AppRouter} from \"../AppRouter\";\r\nimport {AppHeader} from \"./AppHeader\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <AppHeader />\r\n            <AppRouter />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers, createStore} from 'redux';\r\nimport productReducer from \"./product-reducer\";\r\n\r\n// объединяя reducer-ы с помощью combineReducers,\r\n// мы задаём структуру нашего единственного объекта-состояния\r\nconst rootReducer = combineReducers({\r\n    product: productReducer,\r\n})\r\n\r\nlet preloadedState;\r\nconst persistedTodosString = localStorage.getItem('state')\r\nif(persistedTodosString){\r\n    preloadedState = JSON.parse(persistedTodosString)\r\n}\r\n\r\n// непосредственно создаём store\r\nexport const store = createStore(rootReducer, preloadedState);\r\n\r\nstore.subscribe(()=>{\r\n    localStorage.setItem('state', JSON.stringify(store.getState()))\r\n    localStorage.setItem('productInBasket', JSON.stringify(store.getState().product.productInBasket))\r\n})\r\n\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './ui/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./bll/state/store\";\r\nimport {BrowserRouter} from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <BrowserRouter>\r\n                <App/>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}